// const phi: f64 = (1.0 + 5.0f64.sqrt()) / 2.0;
// const s: f64 = (1.0 + phi.powi(2)).sqrt().recip();
// http://blog.andreaskahler.com/2009/06/creating-icosphere-mesh-in-code.html
// TODO: half-edge-mesh to calculate qua automatically!!!
const PHI: f64 = 1.618033988749895;
pub const S: f64 = 0.5257311121191336;
pub const X: f64 = PHI * S;

pub const VERTICES: [[f64; 3]; 12] = [[-S, X, 0.0],
                                      [S, X, 0.0],
                                      [-S, -X, 0.0],
                                      [S, -X, 0.0],
                                      [0.0, -S, X],
                                      [0.0, S, X],
                                      [0.0, -S, -X],
                                      [0.0, S, -X],
                                      [X, 0.0, -S],
                                      [X, 0.0, S],
                                      [-X, 0.0, -S],
                                      [-X, 0.0, S]];

pub const TRIANGLE_LIST: [[usize; 3]; 20] = [[0, 11, 5],//0
                                             [4, 11, 5],//0
                                             [0, 10, 11],//1
                                             [2, 10, 11],//1
                                             [0, 7, 10],//2
                                             [6, 7, 10],//2
                                             [0, 1, 7],//3
                                             [8, 1, 7],//3
                                             [0, 5, 1],//4
                                             [9, 5, 1],//4
                                             [4, 9, 5],//0
                                             [4, 9, 3],//0
                                             [2, 4, 11],//1
                                             [2, 4, 3],//1
                                             [6, 2, 10],//2
                                             [6, 2, 3],//2
                                             [8, 6, 7],//3
                                             [8, 6, 3],//3
                                             [9, 8, 1],//4
                                             [9, 8, 3],//4
                                             ];

pub const RAINBOW: [[f32; 3]; 5] = [[1.0, 0.0, 0.0],
                                    [0.0, 1.0, 0.0],
                                    [0.0, 0.0, 1.0],
                                    [1.0, 1.0, 1.0],
                                    [0.0, 0.0, 0.0]];

/*
          *a

      *b      *c

          *d      *e

              *f
*/
pub const VERTEX_IN_ROOT: [[[f64; 2]; 3]; 4] = [
            [[0.0, 0.0], [1.0, 0.0], [0.0, 1.0]],//a b c
            [[1.0, 1.0], [1.0, 0.0], [0.0, 1.0]],//d b c
            [[1.0, 1.0], [0.0, 2.0], [0.0, 1.0]],//d e c
            [[1.0, 1.0], [0.0, 2.0], [1.0, 2.0]],//d e f
        ];
